
#Задание 1
import pandas as pd

def filtered(row):
    if row['traffic_source'] == 'yandex':
        return 'organic'
    elif row['traffic_source'] == 'google':
        return 'organic'
    elif row['traffic_source'] == 'paid':
        if row['region'] == 'Russia':
            return 'ad'
        else:
            return 'other'
    elif row['traffic_source'] == 'email':
        if row['region'] == 'Russia':
            return 'ad'
        else:
            return 'other'
    else:
        return row['traffic_source']

log=pd.read_csv('visit_log.csv', sep=';')
log['source_type']=log.apply(filtered, axis=1)
log.head(10)

#Задание 2
urls=pd.read_csv('URLs.txt')
urls[urls.url.str.contains('/[0-9]{8}-', regex=True)].head()

#Задание 3
def average(row):
    mean_=(row['timestamp_max']-row['timestamp_min'])
    return mean_

ratings=pd.read_csv('ratings.csv', sep=',')
ratings_count=ratings.groupby('userId').count().reset_index()
ratings_count=ratings_count[['userId','rating']]
count_more_than_100=ratings_count[ratings_count['rating']>100]
count_more_than_100.rename(columns={'rating': 'rating_count'}, inplace=True)
rating_max=ratings.groupby('userId').max().reset_index()
rating_min=ratings.groupby('userId').min().reset_index()
rating_max_timestamp=rating_max[['userId','timestamp']]
rating_min_timestamp=rating_min[['userId','timestamp']]
rating_max_timestamp.rename(columns={'timestamp': 'timestamp_max'}, inplace=True)
rating_min_timestamp.rename(columns={'timestamp': 'timestamp_min'}, inplace=True)
avg_timestamp=count_more_than_100.merge(rating_max_timestamp, how='inner').merge(rating_min_timestamp, how='inner')
avg_timestamp['avg']=avg_timestamp.apply(average, axis=1)
len(count_more_than_100)==len(avg_timestamp)
avg_timestamp.head(15)

#Задание 4
rzd = pd.DataFrame(
    {
        'client_id': [111, 112, 113, 114, 115],
        'rzd_revenue': [1093, 2810, 10283, 5774, 981]
    }
)
auto = pd.DataFrame(
    {
        'client_id': [113, 114, 115, 116, 117],
        'auto_revenue': [57483, 83, 912, 4834, 98]
    }
)
air = pd.DataFrame(
    {
        'client_id': [115, 116, 117, 118],
        'air_revenue': [81, 4, 13, 173]
    }
)
client_base = pd.DataFrame(
    {
        'client_id': [111, 112, 113, 114, 115, 116, 117, 118],
        'address': ['Комсомольская 4', 'Энтузиастов 8а', 'Левобережная 1а', 'Мира 14', 'ЗЖБИиДК 1', 
                    'Строителей 18', 'Панфиловская 33', 'Мастеркова 4']
    }
)
table=rzd.merge(auto, how='outer', on='client_id')
table=table.merge(air, how='outer', on='client_id')
table.loc[table.rzd_revenue.isnull(), 'rzd_revenue',]=0
table.loc[table.auto_revenue.isnull(), 'auto_revenue',]=0
table.loc[table.air_revenue.isnull(), 'air_revenue',]=0
full_table=table.merge(client_base, how='outer', on='client_id')
table
